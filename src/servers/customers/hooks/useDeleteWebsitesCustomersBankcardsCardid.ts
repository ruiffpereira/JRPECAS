/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  DeleteWebsitesCustomersBankcardsCardidMutationResponse,
  DeleteWebsitesCustomersBankcardsCardidPathParams,
  DeleteWebsitesCustomersBankcardsCardid404,
  DeleteWebsitesCustomersBankcardsCardid500,
} from '../types/DeleteWebsitesCustomersBankcardsCardid.ts'
import { useMutation } from '@tanstack/react-query'

export const deleteWebsitesCustomersBankcardsCardidMutationKey = () =>
  [{ url: '/websites/customers/bankcards/{cardId}' }] as const

export type DeleteWebsitesCustomersBankcardsCardidMutationKey = ReturnType<
  typeof deleteWebsitesCustomersBankcardsCardidMutationKey
>

/**
 * @summary Delete a bank card
 * {@link /websites/customers/bankcards/:cardId}
 */
export async function deleteWebsitesCustomersBankcardsCardid(
  cardId: DeleteWebsitesCustomersBankcardsCardidPathParams['cardId'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    DeleteWebsitesCustomersBankcardsCardidMutationResponse,
    ResponseErrorConfig<
      | DeleteWebsitesCustomersBankcardsCardid404
      | DeleteWebsitesCustomersBankcardsCardid500
    >,
    unknown
  >({
    method: 'DELETE',
    url: `/websites/customers/bankcards/${cardId}`,
    baseURL: 'http://localhost:2001/api',
    ...requestConfig,
  })
  return res.data
}

/**
 * @summary Delete a bank card
 * {@link /websites/customers/bankcards/:cardId}
 */
export function useDeleteWebsitesCustomersBankcardsCardid<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteWebsitesCustomersBankcardsCardidMutationResponse,
      ResponseErrorConfig<
        | DeleteWebsitesCustomersBankcardsCardid404
        | DeleteWebsitesCustomersBankcardsCardid500
      >,
      { cardId: DeleteWebsitesCustomersBankcardsCardidPathParams['cardId'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey =
    mutationOptions.mutationKey ??
    deleteWebsitesCustomersBankcardsCardidMutationKey()

  return useMutation<
    DeleteWebsitesCustomersBankcardsCardidMutationResponse,
    ResponseErrorConfig<
      | DeleteWebsitesCustomersBankcardsCardid404
      | DeleteWebsitesCustomersBankcardsCardid500
    >,
    { cardId: DeleteWebsitesCustomersBankcardsCardidPathParams['cardId'] },
    TContext
  >(
    {
      mutationFn: async ({ cardId }) => {
        return deleteWebsitesCustomersBankcardsCardid(cardId, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
